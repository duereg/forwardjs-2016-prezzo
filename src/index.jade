doctype html
html
  head
    meta(charset='utf-8')
    meta(name='viewport', content='width=device-width, initial-scale=1, maximum-scale=1')
    title ES2015 today

    link(rel='stylesheet', type='text/css', href='build/build.css')

  body

    article.us-hero

      section(data-bespoke-hash='javascript-today')
        h1 JavaScript today
        h3 How we got here, where we are, what's next
        h3 Powered by <a href="http://tech.opentable.com/">OpenTable Engineering</a>
        h4 Matt Blair
        h5 Principal Software Engineer, Search Platform
        h5 mblair@opentable.com

      section(data-bespoke-hash='ancient-history')
        h2 Ancient History
        ul
          li
            span.date Dec 1999
            span.event ES3 Released
          li
            span.date Jan 2000
            span.event ES4 work started*
          li
            span.date Oct 2007
            span.event Microsoft goes on attack
          li
            <img src="images/bullshit.jpg" />
          li
            <img src="images/popcorn.gif" />
          li
            span.date Aug 2008
            span.event ES4 scaled back to "harmony project"
          li
            span.date Dec 2009
            span.event strict mode, new features released
          li
            span.date Jun 2011
            span.event ES5 Released
          li
            span.date Nov 2013
            span.event The beginning of the end of Joyent and node.js
          li
            span.date Dec 2013
            span.event Ben Noordhuis (#3) stops contributing to node.js
          li
            span.date Dec 2013
            span.event Isaac Schlueter (#2) leaves Joyent
          li
            <img src="images/popcorn2.gif" />

      section(data-bespoke-hash='modern-history')
        h2 Modern History
        ul
          li
            span.date Sep 2014
            span.event First commit to 6to5 project
          li
            span.date Nov 2014
            span.event Fedor Indutny forks node.js into io.js
          li
            <img src="images/eddie-izzard-popcorn-gif-o.gif" />
          li
            span.date Jan 2015
            span.event io.js v1, TC39 moves to annual releases (ES2015)
          li
            span.date Feb 2015
            span.event babel v4 - 6to5 renamed
          li
            span.date Apr 2015
            span.event babel v5 - ES7!!!
          li
            span.date May 2015
            span.event io.js v2
          li
            span.date Jun 2015
            span.event ES6/ES2015 Spec Released
          li
            span.date Aug 2015
            span.event io.js v3
          li
            span.date Sep 2015
            span.event io.js v3.3.1, npm v4
          li
            span.date Oct 2015
            span.event npm v5, babel v6
          li
            span.date Jan 2016
            span.event Chrome 4.9 - 91% ES 2015 support

      section(data-bespoke-hash='browsers')
        h2 Where we are - Browsers
        ul
          li
            span.date Chrome 49+
            span.event 91%
          li
            span.date FF 45
            span.event 85%
          li
            span.date Edge 13
            span.event 83%
          li
            span.date WebKit
            span.event 83%
          li
            span.date Safari 9
            span.event 54%

      section(data-bespoke-hash='runtimes')
        h2 Where we are - Runtimes
        ul
          li
            span.date XS6
            span.event 97%
          li
            span.date EchoJS
            span.event 66%
          li
            span.date Node 5.0
            span.event 57%
          li
            span.date Node 4.0
            span.event 52%
          li
            span.date Node 0.12
            span.event 17%

      section(data-bespoke-hash='compilers')
        h2 Where we are - Compilers
        ul
          li
            span.date Babel
            span.event 76%
          li
            span.date Traceur
            span.event 59%
          li
            span.date TypeScript
            span.event 56%
          li
            span.date Closure
            span.event 31%
          li
            span.date JSX
            span.event 20%

      section(data-bespoke-hash='what-works-everywhere-syntax')
        h2 What Works Everywhere?
        h3 Syntax
        ul
          li let
          li const
          li Arrow Functions
          li Object Literal Extensions
          li String Templates

      section(data-bespoke-hash='let')
        h2 let
        pre
          code.language-javascript.
            function varTest() {
              var x = 31;
              if (true) {
                var x = 71;  // same variable!
                console.log(x);  // 71
              }
              console.log(x);  // 71
            }

      section(data-bespoke-hash='let-2')
        h2 let
        pre
          code.language-javascript.
            function letTest() {
              let x = 31;
              if (true) {
                let x = 71;  // different variable
                console.log(x);  // 71
              }
              console.log(x);  // 31
            }

      section(data-bespoke-hash='let-3')
        h2 let errors
        pre
          code.language-javascript.
            if (x) {
              let foo;
              let foo; // TypeError thrown.
            }

            function do_something() {
              console.log(foo); // ReferenceError
              let foo = 2;
            }

      section(data-bespoke-hash='const')
        h2 const
        pre
          code.language-javascript.
            const MY_FAV = 7;
            MY_FAV = 20; //fails FF, Chrome, not Safari

            console.log("my favorite number is: " + MY_FAV); // 7

            const MY_FAV = 20; //throws
            var MY_FAV = 20; //throws

            console.log("my favorite number is " + MY_FAV); // 7

      section(data-bespoke-hash='const-2')
        h2 const
        pre
          code.language-javascript.
            const FOO; // SyntaxError: missing = in const declaration
            const MY_OBJECT = {"key": "value"}; // works

            //fails FF, Chrome, not Safari
            MY_OBJECT = {"OTHER_KEY": "value"};

            // Object attributes are not protected
            MY_OBJECT.key = "otherValue";

      section(data-bespoke-hash='arrow-functions')
        h2 Arrow Functions
        pre
          code.language-javascript.
            (param1, param2, …, paramN) => { statements }
            (param1, param2, …, paramN) => expression
                     // equivalent to:  => { return expression; }

            // Parentheses are optional when there's one parameter
            (singleParam) => { statements }
            singleParam => { statements }

            // A function with no parameters requires parentheses
            () => { statements }

      section(data-bespoke-hash='object-literals')
        h2 Object Literal Extensions
        pre
          code.language-javascript.
            var a = 103;
            var foo = 'bar'
            var obj = {
              a, //object shorthand
              m(z) {return z + this.a}, // function shorthand
              [bar]: 104, // foo: 104
              get [Math.random()]() {return this.a}, //
            }

      section(data-bespoke-hash='string templates')
        h2 String Templating
        pre
          code.language-javascript.
            console.log("string text line 1\n string text line 2");
            ===
            console.log(`string text line 1
            string text line 2`);

            var a = 5, b = 10;
            console.log(`Fifteen is ${a + b} and\nnot ${2 * a + b}.`);

      section(data-bespoke-hash='what-works-everywhere-ds')
        h2 What Works Everywhere?
        h3 Data Structures
        ul
          li Set
          li Map
          li WeakSet
          li WeakMap
          li Symbol
          li Promise

      section(data-bespoke-hash='set')
        h2 Set
        pre
          code.language-javascript.
            let s = new Set()
            s.add("hello").add("goodbye").add("hello")
            s.size === 2
            s.has("hello") === true
            for (let key of s.values()) // insertion order
              console.log(key)

      section(data-bespoke-hash='map')
        h2 Map
        pre
          code.language-javascript.
            let m = new Map()
            m.set("hello", 42)
            m.set(s, 34)
            m.get(s) === 34
            m.size === 2
            for (let [ key, val ] of m.entries())
                console.log(key + " = " + val)

      section(data-bespoke-hash='weakset')
        h2 WeakSet
        pre
          code.language-javascript.
            let thingToDelete = {};
            let ws = new WeakSet()
            ws.set(thingToDelete) //cannot be primitive
            ws.has(thingToDelete) === true
            thingToDelete = null;
            ws.has(thingToDelete) === false

      section(data-bespoke-hash='weakmap')
        h2 WeakMap
        pre
          code.language-javascript.
            let thingToDelete = {};
            let wm = new WeakMap()
            wm.set(thingToDelete, 42) //cannot be primitive
            wm.get(thingToDelete) === 42
            thingToDelete = null;
            wm.has(thingToDelete) === false
            wm.get(thingToDelete) === undefined

      section(data-bespoke-hash='symbol')
        h2 Symbol
        pre
          code.language-javascript.
            Symbol("foo") !== Symbol("foo")
            const foo = Symbol()
            const bar = Symbol()
            typeof foo === "symbol"
            typeof bar === "symbol"
            let obj = {}
            obj[foo] = "foo"
            obj[bar] = "bar"
            JSON.stringify(obj) // {}
            Object.keys(obj) // []

      section(data-bespoke-hash='promise')
        h2 Promise
        ul
          li <img src="images/promises.png" width="400px" />
          li <img src="images/DoYouEvenCodeBro.jpg" height="400px" />

      section(data-bespoke-hash='what-else')
        h2 What else?
        ul
          li class
          li super
          li generators

      section(data-bespoke-hash='what-am-I-missing')
        h2 What are we missing?
        ul
          li Proxies
          li Destructuring
          li subclassing Array, Function, etc

      section(data-bespoke-hash='es6-options')
        h2 What are my options?
        ul
          li
            b Client SPA in Chrome 49+
            ul
              li 91% of ES6
              li Proxies, Destructuring, subclassing
              li no module import/export

          li
            b IofT Application using XS6
            ul
              li 97% of ES6
              li limited to Kinoma hardware

          li
            b Node 4/5 App with Babel
            ul
              li 75% of ES6
              li Destructuring
              li ES7 support (async, await)
              li JSX, TypeScript, Flow, etc


    div.logo

    script(src='build/build.js')
